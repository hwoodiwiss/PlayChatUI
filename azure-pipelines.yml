pool:
  vmImage: ubuntu-latest

resources:
  containers:
    - container: node
      image: node:10

trigger:
  - master

stages:
  - stage: Build
    jobs:
      - job: Test
        container: node
        steps:
          - checkout: self
            clean: true
            displayName: Checkout Source
          - script: yarn install --frozen-lockfile
            displayName: Install using yarn with frozen lockfile
          - script: yarn test
            displayName: Run Unit Tests
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testRunner: JUnit
              testResultsFiles: "**/junit.xml"
            displayName: Publish Test Result
          - task: UseDotNet@2
            condition: succeededOrFailed()
            inputs:
              packageType: sdk
              version: 3.x
            displayName: Install Dotnet For Coverage Report
          - task: PublishCodeCoverageResults@1
            condition: succeededOrFailed()
            inputs:
              codeCoverageTool: "cobertura"
              summaryFileLocation: "**/cobertura-coverage.xml"
            displayName: Publish Test Coverage Report

      - job: Build
        container: node
        steps:
          - checkout: self
            clean: true
            displayName: Checkout Source
          - script: yarn install --frozen-lockfile
            displayName: Install using yarn with frozen lockfile
          - script: yarn build
            displayName: Build dev using yarn
          - task: PublishPipelineArtifact@1
            displayName: Publish Dev Build
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/dist/PlayChatUI"
              artifact: dist-dev
              publishLocation: pipeline
          - script: yarn build:prod
            displayName: Build production using yarn
          - task: PublishPipelineArtifact@1
            displayName: Publish Prod Build
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/dist/PlayChatUI"
              artifact: dist-prod
              publishLocation: pipeline
